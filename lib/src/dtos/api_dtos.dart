// This file is auto-generated from the DTOs in MemoryPuzzleApi.
// Do not edit this file directly, changes will be overwritten.
class FileGroupDto {
  final String groupName;
  final int imageCount;

  FileGroupDto({
    required this.groupName,
    required this.imageCount,
  });

  factory FileGroupDto.fromJson(Map<String, dynamic> json) => FileGroupDto(
    groupName: json['groupName'],
    imageCount: json['imageCount'] ?? 0,
  );
}

class LoginDto {
  final String username;
  final String password;

  LoginDto({
    required this.username,
    required this.password,
  });

  factory LoginDto.fromJson(Map<String, dynamic> json) => LoginDto(
    username: json['username'],
    password: json['password'],
  );
}

class PuzzleAdminDto {
  final int id;
  final String name;
  final String creator;
  final DateTime creationTime;
  final int imageCount;
  final bool isPublic;

  PuzzleAdminDto({
    required this.id,
    required this.name,
    required this.creator,
    required this.creationTime,
    required this.imageCount,
    required this.isPublic,
  });

  factory PuzzleAdminDto.fromJson(Map<String, dynamic> json) => PuzzleAdminDto(
    id: json['id'] ?? 0,
    name: json['name'],
    creator: json['creator'],
    creationTime: json['creationTime'],
    imageCount: json['imageCount'] ?? 0,
    isPublic: json['isPublic'] ?? false,
  );
}

class PuzzleDto {
  final int id;
  final String name;
  final DateTime creationTime;
  final String author;
  final String authorRole;
  final bool isPublic;
  final List<PuzzleImageDto> images;

  PuzzleDto({
    required this.id,
    required this.name,
    required this.creationTime,
    required this.author,
    required this.authorRole,
    required this.isPublic,
    required this.images,
  });

  factory PuzzleDto.fromJson(Map<String, dynamic> json) => PuzzleDto(
    id: json['id'] ?? 0,
    name: json['name'],
    creationTime: json['creationTime'],
    author: json['author'],
    authorRole: json['authorRole'],
    isPublic: json['isPublic'] ?? false,
    images: json['images'],
  );
}

class PuzzleImageDto {
  final String imageUid;

  PuzzleImageDto({
    required this.imageUid,
  });

  factory PuzzleImageDto.fromJson(Map<String, dynamic> json) => PuzzleImageDto(
    imageUid: json['imageUid'],
  );
}

class ServiceDto {
  final String serviceType;
  final String implementationType;
  final String lifetime;

  ServiceDto({
    required this.serviceType,
    required this.implementationType,
    required this.lifetime,
  });

  factory ServiceDto.fromJson(Map<String, dynamic> json) => ServiceDto(
    serviceType: json['serviceType'],
    implementationType: json['implementationType'],
    lifetime: json['lifetime'],
  );
}

class ServiceListProvider {
  final List<ServiceDto> services;

  ServiceListProvider({
    required this.services,
  });

  factory ServiceListProvider.fromJson(Map<String, dynamic> json) => ServiceListProvider(
    services: json['services'],
  );
}

class SystemInfoDto {
  final String databaseProvider;
  final String databaseConnectionString;
  final String efCoreVersion;
  final String aspNetVersion;
  final String serverIp;
  final String clientIp;
  final DateTime serverTime;

  SystemInfoDto({
    required this.databaseProvider,
    required this.databaseConnectionString,
    required this.efCoreVersion,
    required this.aspNetVersion,
    required this.serverIp,
    required this.clientIp,
    required this.serverTime,
  });

  factory SystemInfoDto.fromJson(Map<String, dynamic> json) => SystemInfoDto(
    databaseProvider: json['databaseProvider'],
    databaseConnectionString: json['databaseConnectionString'],
    efCoreVersion: json['efCoreVersion'],
    aspNetVersion: json['aspNetVersion'],
    serverIp: json['serverIp'],
    clientIp: json['clientIp'],
    serverTime: DateTime.parse(json['serverTime']),
  );
}

class UserAdminDto {
  final String username;
  final List<String> roles;
  final DateTime? lastLogin;
  final int puzzleCount;

  UserAdminDto({
    required this.username,
    required this.roles,
    this.lastLogin,
    required this.puzzleCount,
  });

  factory UserAdminDto.fromJson(Map<String, dynamic> json) => UserAdminDto(
    username: json['username'],
    roles: json['roles'],
    lastLogin: json['lastLogin'],
    puzzleCount: json['puzzleCount'] ?? 0,
  );
}

